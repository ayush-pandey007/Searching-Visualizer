{"version":3,"sources":["visualizer/Visualizer.js","App.js","reportWebVitals.js","index.js"],"names":["temp1","Visualizer","useState","mainArr","setMainArr","searchValue","setSearchValue","length","randomNumberFromRange","low","high","Math","floor","random","getNewArray","arr","i","item","idx","val","push","document","getElementsByClassName","style","backgroundColor","window","onload","binaryHelper","animations","bars","k","setTimeout","mid","console","log","m","j","setJob","value","linearsearch","parseInt","lo","hi","found","binarySearch","noOfFunction2","sort","a","b","temp","map","getSortedArray","className","height","onClick","placeholder","type","onChange","e","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4f7c08a.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\n\r\n\r\nvar temp1='linearsearch';\r\n\r\n\r\nfunction Visualizer() {\r\n\r\n    const [mainArr, setMainArr] = useState([]);\r\n    //const [resultmsg, setResultmsg] = useState('');\r\n    const [searchValue, setSearchValue] = useState(250);\r\n    const length=30;\r\n    \r\n    \r\nconst randomNumberFromRange = (low,high)=>{\r\n    return Math.floor(Math.random()*(high-low)+low);\r\n};\r\nconst getSortedArray = length=>{\r\n    const arr=[];\r\n   \r\n    for(let i=0;i<length;i++){\r\n     \r\n          arr.push(randomNumberFromRange(100,400));\r\n          if (document.getElementsByClassName('array-bar')[i] != null) {\r\n            document.getElementsByClassName('array-bar')[\r\n                i\r\n            ].style.backgroundColor = '#5DADE2';\r\n        }\r\n         \r\n    }\r\n    arr.sort((a, b) => a - b);\r\n    const temp = arr.map((item, idx) => ({ idx: idx, val: item }));\r\n    setMainArr(temp);\r\n};\r\n\r\nconst getNewArray = length=>{\r\n    const arr=[];\r\n   \r\n    for(let i=0;i<length;i++){\r\n        const item ={\r\n            idx: i,\r\n            val: randomNumberFromRange(100,400),\r\n        };\r\n        arr.push(item);\r\n        if (document.getElementsByClassName('array-bar')[i] != null) {\r\n            document.getElementsByClassName('array-bar')[\r\n                i\r\n            ].style.backgroundColor = '#5DADE2';\r\n        }\r\n       \r\n    }\r\n    setMainArr(arr);\r\n    \r\n   \r\n};\r\nwindow.onload = function exampleFunction() {\r\n    getNewArray(length);\r\n};\r\nconst binarySearch = value => {\r\n  \r\n    let lo = 0;\r\n    let hi = length - 1;\r\n    let animations = [];\r\n    let found = false;\r\n    \r\n\r\n    while (lo <= hi) {\r\n        let mid = Math.floor((lo + hi) / 2);\r\n\r\n        animations.push({\r\n            i: lo,\r\n            j: hi,\r\n            mid: mid,\r\n        });\r\n\r\n        if (mainArr[mid].val === value) {\r\n            found = true;\r\n            break;\r\n        } else if (mainArr[mid].val > value) {\r\n            hi = mid - 1;\r\n        } else {\r\n            lo = mid + 1;\r\n        }\r\n    }\r\n\r\n    if (!found) {\r\n        animations.push({\r\n            i: -1,\r\n            j: -1,\r\n            mid: -1,\r\n        });\r\n    }\r\n\r\n    binaryHelper(animations, value);\r\n};\r\n\r\n\r\nconst binaryHelper = (animations, searchValue) => {\r\n    let bars = document.getElementsByClassName('array-bar');\r\n\r\n    for (let k = 0; k < animations.length; k++) {\r\n        if (animations[k].i === -1) {\r\n            setTimeout(() => {\r\n               \r\n\r\n                bars[animations[k - 1].mid].style.backgroundColor = '#566573';\r\n            }, k * 1000);\r\n            break;\r\n        }\r\n\r\n        if (mainArr[animations[k].mid].val === searchValue) {\r\n            console.log('inside');\r\n            setTimeout(() => {\r\n                bars[animations[k].mid].style.backgroundColor = '#76D7C4 ';\r\n\r\n               \r\n            }, (k + 1) * 1000);\r\n        }\r\n        let tempLen = length;\r\n        setTimeout(() => {\r\n            for (let m = 0; m < tempLen; m++) {\r\n                if (m <= animations[k].j && m >= animations[k].i)\r\n                    bars[m].style.backgroundColor = '#5DADE2';\r\n                else bars[m].style.backgroundColor = '#566573';\r\n\r\n                if (m === animations[k].mid) bars[m].style.backgroundColor = 'red';\r\n            }\r\n        }, k * 1000);\r\n    }\r\n};\r\n\r\n\r\n\r\nconst linearsearch = value =>{\r\n     \r\n    for(let i=0;i<length;i++){\r\n        if(mainArr[i].val===value){\r\n            console.log(\"found\");\r\n            setTimeout(() =>{\r\n            document.getElementsByClassName('array-bar')[\r\n                i\r\n            ].style.backgroundColor='pink';\r\n        },i*1000);\r\n        }\r\n        else{\r\n            setTimeout(() => {\r\n                document.getElementsByClassName('array-bar')[\r\n                    i\r\n                ].style.backgroundColor = 'red';\r\n            }, i * 1000);\r\n\r\n            setTimeout(() => {\r\n                document.getElementsByClassName('array-bar')[\r\n                    i\r\n                ].style.backgroundColor = '#5DADE2';\r\n            }, (i + 1) * 1000);\r\n        }\r\n           \r\n    }\r\n    \r\n};\r\nconst setJob=temp1=>{\r\n    console.log(temp1);\r\n   \r\n   temp1==='linearsearch'\r\n        ?linearsearch(parseInt(searchValue))\r\n        :binarySearch(parseInt(searchValue));\r\n        \r\n};\r\nconst noOfFunction=()=>\r\n{                   \r\n    getNewArray(length);\r\n     temp1='linearsearch';\r\n     console.log(\"from nooffuction\"+temp1);\r\n\r\n};\r\nconst noOfFunction2=()=>\r\n{\r\n    getSortedArray(length)\r\n    temp1='binarysearch';\r\n    console.log(\"from nooffuction2\"+temp1);\r\n    \r\n    \r\n};\r\n\r\n    return (\r\n        <div className=\"searching-container\">\r\n            <div className=\"array-container\">\r\n                <div className=\"result-box\">\r\n                    \r\n                </div>\r\n                {mainArr.map(item=>{\r\n                    return(\r\n                        <div \r\n                        className='array-bar'\r\n                        key={item.idx}\r\n                        style={{height: item.val,backgroundColor: '#5DADE2'}}>\r\n                            \r\n                            {item.val}\r\n                            </div>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n            <div className=\"navbar\">\r\n        \r\n            <button\r\n            className='btn1'\r\n            \r\n            onClick={() =>\r\n                noOfFunction()\r\n               \r\n            }\r\n            >\r\n                linearsearch\r\n            </button>\r\n            <button \r\n            className='btn2'\r\n            onClick={()=>\r\n                noOfFunction2()\r\n            }\r\n            >\r\n                binarysearch\r\n            </button>\r\n            <button\r\n            className='btn3'\r\n            onClick={()=>\r\n                setJob(temp1)\r\n            }\r\n            >start searching\r\n                \r\n            </button>\r\n            <label>Search Element</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder='Enter value '\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tvalue={searchValue}\r\n\t\t\t\t\tonChange={e => setSearchValue(e.target.value)}\r\n\t\t\t\t></input>\r\n\r\n           \r\n            \r\n\r\n            </div>\r\n            <div className=\"nav-bar\">\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Visualizer\r\n","import Visualizer from './visualizer/Visualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Visualizer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}